{
	"language": "go",
	"head": [
		"package test",
		"",
		"import \"github.com/ddiay/go-gameserver/acctserver\"",
		""
	],
	"tail": [],
	"typemap": {
		"int": {
			"variable": [ "var <VAR> int" ],
			"field": [ "<FIELD> int" ],
			"param": [ "<PARAM> int" ],
			"serialize": [ "binary.LittleEndian.PutUint32(data, uint32(<VAR>))" ],
			"deserialize": [ "<VAR> := binary.LittleEndian.Uint32(data)" ]
		},
		"string": {
			"variable": [ "var <VAR> string" ],
			"field": [ "<FIELD> string" ],
			"param": [ "<PARAM> string" ],
			"serialize": [ "binary.LittleEndian.PushString(data, <VAR>)" ],
			"deserialize": [ "<VAR> := binary.LittleEndian.String(data)" ]
		},
		"struct": {
			"declaration": [
				"type <TYPE> struct {",
					"<FIELDS>",
				"}",
				"",
				"func Marshal<TYPE>(self <TYPE>, data []byte) {",
				"}",
				"",
				"func Unmarshal<TYPE>(self <TYPE>, data []byte) {",
				"}",
				""
			],
			"field": [ "<FIELD> <TYPE>" ],
			"param": [ "<PARAM> <TYPE>" ],
			"serialize": [ "Marshal<TYPE>(<VAR>, data []byte)" ],
			"deserialize": [ "Unmarshal<Type>(<VAR>, data []byte)" ]
		}
	},
	"msg": {
		"from": {
			"head": [ "" ],
			"tail": [ "" ],
			"body": [
				"func <METHOD>(<TO>, <PARAMS>) {",
					"data := make([]byte, 65535)",
					"<SERIALIZE>",
					"<TO>.Send(data)",
				"}",
				"",
				"func Broadcast<METHOD>(<TOSET>, <PARAMS>) {",
					"data := make([]byte, 65535)",
					"<SERIALIZE>",
					"for _, <TO> := range <TOSET> {",
						"<TO>.Send(data)",
					"}",
				"}"
			]
		},
		"to": {
			"head": [ "" ],
			"tail": [ "" ],
			"body": [
				"func Parse<METHOD>(<FROM>, data []byte) {",
					"<DESERIALIZE>",
					"On<METHOD>(<FROM>, <PARAMS>)",
				"}",
				""
			]
		}
	}
}